plugins {
    id 'java' // Java 플러그인 추가
    id 'org.springframework.boot' version '3.3.5' // Spring Boot 플러그인 추가
    id 'io.spring.dependency-management' version '1.1.6' // Spring 의존성 관리 플러그인 추가
}

group = 'com.ohgiraffers' // 그룹 ID 설정
version = '0.0.1-SNAPSHOT' // 버전 설정

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // Java 버전 설정
    }
    sourceCompatibility = JavaVersion.VERSION_17 // 소스 호환성 설정
    targetCompatibility = JavaVersion.VERSION_17 // 타겟 호환성 설정
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor // 컴파일 전용 설정
    }
}

repositories {
    mavenCentral() // Maven 중앙 저장소 사용
}

dependencies {
    // 데이터 유효성 검사를 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // API 문서화를 위한 의존성 (SpringDoc OpenAPI)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // 애플리케이션 상태 및 운영 정보를 위한 의존성
    // implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // JPA 기반 데이터 접근을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Security를 통한 인증 및 권한 관리를 위한 의존성(swagger 테스트 할 시 주석처리)
    // implementation 'org.springframework.boot:spring-boot-starter-security'

    // 웹 애플리케이션 개발을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Lombok 의존성 - 코드 생성을 위한 주입
    compileOnly 'org.projectlombok:lombok'

    // 코드 생성 및 간소화를 위한 Lombok (애노테이션 프로세서)
    annotationProcessor 'org.projectlombok:lombok'

    // 개발 편의를 위한 자동 재시작 기능 제공
    // developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Docker Compose 와의 연동을 위한 의존성(swagger 테스트 할 시 주석처리)
    // developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // MySQL 데이터베이스와의 연결을 위한 JDBC 드라이버
    runtimeOnly 'com.mysql:mysql-connector-j'

    // 단위 및 통합 테스트를 위한 기본 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Testcontainers 기반의 컨테이너 환경에서의 테스트 지원
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'

    // Spring Security 테스트 도구 지원(swagger 테스트 할 시 주석처리)
    // testImplementation 'org.springframework.security:spring-security-test'

    // Testcontainers와 JUnit 통합을 위한 의존성
    testImplementation 'org.testcontainers:mysql'

    // Testcontainers와 JUnit 통합을 위한 의존성
    testImplementation 'org.testcontainers:junit-jupiter'

    // JUnit5 플랫폼 런처 의존성 (IDE 실행 시 사용)
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // swagger 연결 관련 의존성
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    // py통신을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.3.4'

}

bootJar {
    // Spring Boot의 JAR 파일 생성을 활성화합니다.
    enabled = true // JAR 파일 생성을 활성화합니다.
}

bootRun {
    mainClass = 'com.ohgiraffers.recipeapp.RecipeappApplication' // 메인 클래스 설정
}

tasks.named('test') {
    useJUnitPlatform() // JUnit 플랫폼 사용 설정
}
